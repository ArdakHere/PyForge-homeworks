Th—É project is evolving, so you were asked to do the following things:

    understand how the code works
    organise this code into a class named "SoundWaveFactory".
    add extra methods to this class:
        a method to read a wave from .txt file
        a method to print any details you think will be important about the wave DONE
        a method to normalize_sound_waves several waves: in both length (to the shortest file)
        and amplitude (according to the amplitude attribute) DONE
        a method to save wave into np.array txt by default and into WAV file if parameter "type='WAV'" is provided
        extra: a method to switch sin waves into triangular or square waves;
        extra: ADSR amplitude modifications; https://en.wikipedia.org/wiki/Envelope_(music)
        extra: a method to combine the waves into a sequence of notes;
        extra: a method to read a text string of notes so that you class could generate a given melody;
        notes text could look like this: "g4 0.2s b4 0.2s (g3 d5 g5) 0.5s";

DON'T commit NumPy txt files! They are heavy. Commiting a txt file will result in a failed HW evaluation.

Evaluation criteria:
Marks will be divided into either "passed" or "not passed". "Passed" stands for a working code that makes the job done.
You could earn extra points if you:
wrote clean and easy to read code;
handled possible corner cases
showed a good NumPy usage
wrote tests to cover the functionality of your class
provided a clean git history of features development